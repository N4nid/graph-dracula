#+title: Protokoll


* Total time:
2 Tage, 18 Stunden und 58 minuten oder *66h 58min*.

Die Zeit ist händisch gestoppt und maschinell zusammengerechnet, bedeutet es ist nicht 100% genau.
Außerdem habe ich erst ab dem [[<2025-02-04 Di>]] angefangen sie zu stoppen.

* <2025-01-22 Do>
Github repository erstellt für collobaration.
Erste Planung in der Freistunde.

commit hash: dabdc03

* <2025-01-25 So>
Erster Versuch an dem Stringparser.

commit hash: 51013ff

* <2025-01-27 Di>
Habe das parsen von equations mit klammern gefixt.

commit hash: 4d26fbf

* <2025-01-28 Mi>
Kleine Anpassung für einheitlicheren code.
(In EquationNode.java state und value sind jetzt public)

commit hash: a355644

* <2025-01-30 Do>
Wieder Probleme mit klammern gefixt.

commit hash: a838576

* <2025-02-03 Mo>
Überlegen wie special funktionen gehandelt werden sollen.

* <2025-02-04 Di>
Durchbruch mit operator stack.
Anstatt nur auf lastOp limitiert zu sein werden die operatoren in einem Stack gespeichert, um besser auf sie zugreifen zu können.

Habe auch angefangen die Zeit genauer zu loggen.

*Arbeitszeit:*
- [2025-02-04 Di 21:21]--[2025-02-04 Di 22:06] =>  0:45
- [2025-02-04 Di 11:28]--[2025-02-04 Di 13:10] =>  1:42

* <2025-02-05 Mi>
Fertigstellung der groben implementation vom Operator Stack.

*Arbeitszeit:*
- [2025-02-05 Mi 11:27]--[2025-02-05 Mi 13:05] =>  1:38

* <2025-02-06 Do>
Weiter an operator stack gearbeitet.

*Arbeitszeit:*
- [2025-02-06 Do 11:26]--[2025-02-06 Do 13:05] =>  1:39
- [2025-02-06 Do 08:45]--[2025-02-06 Do 09:25] =>  0:40

* <2025-02-10 Mo>
Weiter an operator stack gearbeitet.
- oplevel
- interactiveDemo

*Arbeitszeit:*
- [2025-02-10 Mo 20:18]--[2025-02-10 Mo 21:17] =>  0:59
- [2025-02-10 Mo 10:36]--[2025-02-10 Mo 12:10] =>  1:34

* <2025-02-11 Di>
Stack nicht mehr sortiert nach opLevel, sondern wie eingelesen.
Habe stattdessen die Ausgabe von lastOp angepasst.

*Arbeitszeit:*
- [2025-02-11 Di 17:54]--[2025-02-11 Di 18:30] =>  0:36
- [2025-02-11 Di 11:28]--[2025-02-11 Di 13:10] =>  1:42

* <2025-02-12 Mi>
Special funktionen funktionieren jetzt, der OperatorStack ist auch fertig.
Habe auch die 3 modi fertiggestellt:
- interactiveDemo (um interactive strings einzugeben)
- quickDebug (um einen String schnell zu testen)
- testParser (um viele Strings zu testen)

commit hash: 1db4ae3

*Arbeitszeit:*
- [2025-02-12 Mi 20:31]--[2025-02-12 Mi 21:44] =>  1:13
- [2025-02-12 Mi 17:04]--[2025-02-12 Mi 18:01] =>  0:57

* <2025-02-13 Do>
Habe OperatorStack add() doch noch einmal mit der sortierten variante umgeschrieben nur um dann zu merken, dass meine Idee doch nicht so funktioniert wie ich erhofft hatte.

*Arbeitszeit:*
- [2025-02-13 Do 09:34]--[2025-02-13 Do 10:18] =>  0:44
- [2025-02-13 Do 08:55]--[2025-02-13 Do 09:26] =>  0:31

* <2025-02-15 Sa>
Merged mit main und habe option hinzugefügt, das gui nicht zu launchen sondern stattdessen meine cli variante zu verwenden.
Sowie die option debug prints zu togglen.

commit hashes: 43f3638, 1319521, b681690

*Arbeitszeit:*
- [2025-02-15 Sa 18:30]--[2025-02-15 Sa 18:47] =>  0:17

* <2025-02-16 So>
Probleme mit negativen Zahlen gefixt.

commit hash: 625ff48

*Arbeitszeit:*
- [2025-02-16 So 15:32]--[2025-02-16 So 16:01] =>  0:29

* <2025-02-17 Mo>
An support für sqrt() sowie den special operatoren gearbeitet.

*Arbeitszeit:*
- [2025-02-17 Mo 10:42]--[2025-02-17 Mo 12:08] =>  1:26

* <2025-02-17 Di>
Implementierung für sqrt() und den special operatoren root() und log() fertiggestellt.

commit: 17f3540

* <2025-02-27 Do>
Merged main in meine branch und habe ein kleines Problem mit negativen Zahlen behoben.

Testen der neuen special Operatoren.

commit hash: 954c132

*Arbeitszeit:*
- [2025-02-27 Do 08:46]--[2025-02-27 Do 09:24] =>  0:38

* <2025-03-10 Mo>
Habe basic string sanitization hinzugefügt. (Alle Leerzeichen werden entfernt)
Und habe angefangen support für Konstanten (e pi) zu implementieren.

commit hash: da71f65

*Arbeitszeit:*
- [2025-03-10 Mo 10:46]--[2025-03-10 Mo 12:11] =>  1:25

* <2025-03-11 Di>
Die Konstanten e, pi und phi sind jetzt supported.
Habe ein kleineres Problem mit isFunction gefixt und nanid in main gemerged.

commit hashes: c6aa0ed, caa12ae, 22e9540, 917b8dc

*Arbeitszeit:*
- [2025-03-11 Di 11:30]--[2025-03-11 Di 13:10] =>  1:40

* <2025-03-13 Do>
Habe das parsen etwas getestet.

*Arbeitszeit:*
- [2025-03-13 Do 09:04]--[2025-03-13 Do 09:26] =>  0:22

* <2025-03-17 Mo>
Problem mit root() behoben.

commit hash: 3596d67

*Arbeitszeit:*
- [2025-03-17 Mo 12:11]--[2025-03-17 Mo 13:15] =>  1:04
- [2025-03-17 Mo 11:20]--[2025-03-17 Mo 12:10] =>  0:50

* <2025-03-18 Di>
Angefangen an Support für "unsichtbare" multiplikation zu arbeiten.
Zum Beispiel "2x" bedeutet eigentlich "2*x".

*Arbeitszeit:*
- [2025-03-18 Di 11:29]--[2025-03-18 Di 13:11] =>  1:42

* <2025-03-20 Do>
Support für "unsichtbare" multiplikation weitesgehend fertiggestellt.

commit hash: 8b000d6

*Arbeitszeit:*
- [2025-03-20 Do 08:43]--[2025-03-20 Do 09:25] =>  0:42

* <2025-03-23 Su>
Edgecase gefixt bei dem es hoch eine negative Zahl gibt, welche nicht eingeklammert ist.
Zum beispiel x^-1.

commit hash: 2f1c748

*Arbeitszeit:*
- [2025-03-23 Sun 19:15]--[2025-03-23 Sun 19:48] =>  0:33

* <2025-03-24 Mo>
- Ordner restrukturiert.
- support für unicode varianten von Konstanten implementiert.
- support für special funktion abs() und mod (modulo) hinzugefügt.
- bug gefixt wenn y=0 geparsed wurde.

commit hashes: 5a2ad77, b654546, 8e7339f, ed18702

*Arbeitszeit:*
- [2025-03-24 Mo 10:33]--[2025-03-24 Mo 12:08] =>  1:35

* <2025-03-25 Di>
Java files in das directory JavaClasses/ gemoved.
Aracer06 branch in meine gemerged.
Habe auch angefangen an dem support für funktionen, welche bereits eingegeben worden sind zu arbeiten.

commit hashes: 662fdb3, a81b24c

*Arbeitszeit:*
- [2025-03-25 Di 11:30]--[2025-03-25 Di 12:12] =>  0:42
- [2025-03-25 Di 12:27]--[2025-03-25 Di 13:10] =>  0:43

* <2025-03-27 Do>
Invalide EquationTrees werden jetzt vor dem return in parseEquation() abgefangen. Das wird erreicht, indem werte im TwoDVec verändert werden, falls irgendetwas schief läuft in calculate().
Da das TwoDVec sich sonst nicht ändert, weiß man, dass der Baum invalide ist.

Der input string wird jetzt auch in all lowercase umgewandelt um probleme zu vermeiden.

commit hashes: 1d205bc, d503f44, 9373f48

*Arbeitszeit:*
- [2025-03-27 Do 08:40]--[2025-03-27 Do 09:24] =>  0:44

* <2025-03-31 Mo>
Support für existierende Funktionen ist jetzt fertiggestellt.
Zum beispiel f(x)=g(2x) wäre valider input, vorausgesetzt g(x) existiert.

Habe auch einen failsafe gegen das undendlich rekursive aufrufen von funktionen eingebaut.
Sodass, zum Beispiel f(x)=g(x)+2 mit g(x)=f(2), nicht zum Absturz führt.

commit hashes: b7219d8, 4eadd46, 1221400

*Arbeitszeit:*
- [2025-03-31 Mon 18:49]--[2025-03-31 Mon 21:01] =>  2:12
- [2025-03-31 Mo 10:37]--[2025-03-31 Mo 12:09] =>  1:32

* <2025-04-01 Di>
Bug gefixt bei dem f(x)=x als f(x)=x*x geparsed wurde und mit main gemerged.

Habe auch angefangen an einer Lösung für das Problem, wenn variablen vor special Funktion oder Operatoren stehen, zu arbeiten.

commit hashes: f64c11f, 4bff5fb

*Arbeitszeit:*
- [2025-04-01 Di 11:30]--[2025-04-01 Di 13:10] =>  1:40
- [2025-04-01 Di 09:28]--[2025-04-01 Di 09:50] =>  0:22

* <2025-04-02 Mi>
Habe support für variablen vor special Funktionen/Operatoren fertig implementiert.
Also "abcsin(x)" würde jetzt als "a*b*c*sin(x)" geparsed werden.

Fixed null pointer exception, wenn ein leerer special Operator, wie zum Beispiel "log(2,)", geparsed wird.

Habe auch einen design fehler in OperatorStack gefixt.
getLast() sollte jetzt das richtige returnen.

commit hashes: 1d6590c, 6ea575e

*Arbeitszeit:*
- [2025-04-02 Mi 19:45]--[2025-04-02 Mi 21:53] =>  2:08
- [2025-04-02 Mi 18:23]--[2025-04-02 Mi 18:51] =>  0:28

* <2025-04-03 Do>
Habe angefangen am Support für parametic Funktionen zu arbeiten

*Arbeitszeit:*
- [2025-04-03 Do 08:40]--[2025-04-03 Do 09:24] =>  0:44

* <2025-04-04 Fr>
Weiter am support für parametic Funktionen gearbeitet.

*Arbeitszeit:*
- [2025-04-04 Fr 18:51]--[2025-04-04 Fr 19:32] =>  0:41

* <2025-04-05 Sa>
Parametric Funktionen können jetzt geparsed werden.

commit hash: cf24f93

* <2025-04-07 Mo>
Probleme behoben die es beim parsen von parametic Funktionen gab.

Ersten support für condition trees implementiert.

commit hashes: 41c2d9e, ccc98e9

*Arbeitszeit:*
- [2025-04-07 Mo 16:35]--[2025-04-07 Mo 18:51] =>  2:16
- [2025-04-07 Mo 10:33]--[2025-04-07 Mo 12:10] =>  1:37

* <2025-04-08 Di>
Variablen welche durch invaliden input hinzugefügt wurden, werden jetzt automatisch entfernt.
Es wird ein backup von der variablen liste erstellt bevor der input geparsed wird, sodass dieser Zustand wiederhergestellt werden kann, im Fall von invalidem input.

Kleiner bug gefixt, bei dem "Φ" nicht als Konstante geparsed wurde.

commit hashes: 20821b8, 41997e5

*Arbeitszeit:*
- [2025-04-08 Di 19:26]--[2025-04-08 Di 20:34] =>  1:08
- [2025-04-08 Di 11:28]--[2025-04-08 Di 13:10] =>  1:42
- [2025-04-08 Di 09:56]--[2025-04-08 Di 10:17] =>  0:21

* <2025-04-09 Mi>
Wieder ein Problem mit dem OperatorStack behoben. getLast() hatte nicht den richtigen Operator returned.

Habe das parsen von conditionen verbessert. Falls die condition am Anfang steht, wird diese nun nach hinten geschoben.

habe die MortySmiths Branch in meine gemerged und kleiner Probleme behoben.

commit hashes: 35b1bea, a23b018, 2f46506, 44667a5, 44f41cd

*Arbeitszeit:*
- [2025-04-09 Mi 16:57]--[2025-04-09 Mi 17:28] =>  0:31
- [2025-04-09 Mi 16:19]--[2025-04-09 Mi 16:48] =>  0:29
- [2025-04-09 Mi 15:05]--[2025-04-09 Mi 15:58] =>  0:53
- [2025-04-09 Mi 12:10]--[2025-04-09 Mi 13:25] =>  1:15

* <2025-04-10 Do>
Habe das parsen von parametric Funktionen verbessert.
Nullchecks hinzugefügt und die String manipulation etwas eleganter gemacht.

commit hash: 36b0810

*Arbeitszeit:*
- [2025-04-10 Do 10:00]--[2025-04-10 Do 11:30] =>  1:30

* <2025-04-12 Sa>
Habe main branch in meine gemerged und problem gefixt, bei dem die Funktion ihren Name verliert, wenn sie eine condition enthält.

Außerdem checks eingeführt für parametric Funktionen, dass die x bzw y definition nicht x oder y beinhalten darf.

commit hashes: 839d0ab, 294eabf, 9812d68

*Arbeitszeit:*
- [2025-04-12 Sat 18:39]--[2025-04-12 Sat 19:51] =>  1:12

* <2025-04-17 Do>
Programm getested, code kommentiert und etwas verbessert.

*Arbeitszeit:*
- [2025-04-17 Do 11:40]--[2025-04-17 Do 13:52] =>  2:12
- [2025-04-17 Do 07:41]--[2025-04-17 Do 08:12] =>  0:31

* <2025-04-19 Sa>
Weiter den Code kommentiert und "gesäubert".

*Arbeitszeit:*
- [2025-04-19 Sa 11:20]--[2025-04-19 Sa 11:38] =>  0:18
- [2025-04-19 Sa 10:42]--[2025-04-19 Sa 11:03] =>  0:21

* <2025-04-20 So>
Fertig mit dem kommentieren all meines Quellcodes geworden.

Habe gemerged und eine merge Konflikt behoben.

commit hashes: e0aa354, a01377b, 4a801c2, 17d6061

*Arbeitszeit:*
- [2025-04-20 So 16:48]--[2025-04-20 So 18:10] =>  1:22

* <2025-04-21 Mo>
Die ganze Dokumentation geschrieben.

commit hashes: 15e4b18, 9271490

*Arbeitszeit:*
- [2025-04-21 Mo 21:45]--[2025-04-21 Mo 22:10] =>  0:25
- [2025-04-21 Mo 17:36]--[2025-04-21 Mo 18:44] =>  1:08
- [2025-04-21 Mo 09:05]--[2025-04-21 Mo 11:24] =>  2:19

* <2025-04-24 Do>
Habe support für neuen syntax der condition nodes implementiert und ein problem beim parsen vom interval parametrischer funktionen gefixt.
Das interval darf nicht von "t" abhängen.

commit hashes: 72417ce, 705c392

*Arbeitszeit:*
- [2025-04-24 Do 20:46]--[2025-04-24 Do 22:05] =>  1:19
- [2025-04-24 Do 18:31]--[2025-04-24 Do 19:02] =>  0:31

* <2025-04-25 Fr>
Wenn etwas hinter der condition steht, ist es invalider input und wird dementsprechend gehandhabt.
Zum beispiel "x^2; if(y<9) 2x" würde nicht geparsed werden.

Edgecase in dem etwas, wie zum Beispiel "phi", vor einer parametrischen Funktion stand, wurde kein invalider Input gethrown.
Dies ist nun gefixt

Habe das auch noch in main gemerged.

commit hashes: 808c0cb, e613775, d221e5d, a93a07e


*Arbeitszeit:*
- [2025-04-25 Fr 12:26]--[2025-04-25 Fr 12:58] =>  0:32
- [2025-04-25 Fr 20:16]--[2025-04-25 Fr 20:33] =>  0:17
- [2025-04-25 Fr 20:56]--[2025-04-25 Fr 21:25] =>  0:29

* <2025-04-26 Sa>
Updated documentation.

Conditions after parametric functions now get parsed instead of throwing an error.

commit hashes: a93a07e, 0e7beed

*Arbeitszeit:*
- [2025-04-26 Sa 10:16]--[2025-04-26 Sa 10:59] =>  0:43
- [2025-04-26 Sa 08:22]--[2025-04-26 Sa 09:41] =>  1:19
